{"version":3,"sources":["Components/Order/Order.module.css","Containers/Orders/Orders.module.css","Components/Order/Order.js","Containers/Orders/Orders.js"],"names":["module","exports","order","props","arr","key","ing","push","name","amount","finalOutput","map","ar","className","styles","List","Order","price","toFixed","Orders","this","onFecthOrders","token","userId","orders","Spinner","loading","id","ingredients","orderInfo","Component","connect","state","auth","dispatch","fetchActions"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,sB,mBCAtDD,EAAOC,QAAU,CAAC,OAAS,yB,wGCyBZC,EAvBD,SAACC,GACb,IAAIC,EAAM,GACV,IAAK,IAAIC,KAAOF,EAAMG,IAChBH,EAAMG,IAAID,GAAO,GACnBD,EAAIG,KAAK,CAAEC,KAAMH,EAAKI,OAAQN,EAAMG,IAAID,KAI5C,IAAMK,EAAcN,EAAIO,KAAI,SAAAC,GAC1B,OAAO,0BAAMC,UAAWC,IAAOC,KAAMV,IAAKO,EAAGJ,MAAOI,EAAGJ,KAAhD,KAAwDI,EAAGH,OAA3D,QAKT,OACE,yBAAKI,UAAWC,IAAOE,OACrB,oCAAUb,EAAMK,MAChB,2CAAiBE,GACjB,qCAAU,gCAASP,EAAMc,MAAMC,QAAQ,O,yCCbvCC,E,uKAGJ,WACEC,KAAKjB,MAAMkB,cAAcD,KAAKjB,MAAMmB,MAAOF,KAAKjB,MAAMoB,U,oBAcxD,WACE,IAAIC,EAAS,kBAACC,EAAA,EAAD,MAWb,OAVKL,KAAKjB,MAAMuB,UACdF,EACE,yBAAKX,UAAWC,IAAOK,QACpBC,KAAKjB,MAAMqB,OAAOb,KAAI,SAAAT,GACrB,OAAO,kBAACc,EAAD,CAAOX,IAAKH,EAAMyB,GAAIrB,IAAKJ,EAAM0B,YACtCpB,KAAMN,EAAM2B,UAAUrB,KAAMS,OAAQf,EAAMe,aAK7CO,M,GA9BUM,aAmDNC,uBAjBS,SAACC,GACvB,MAAO,CACLR,OAAQQ,EAAM9B,MAAMsB,OACpBE,QAASM,EAAM9B,MAAMwB,QACrBJ,MAAOU,EAAMC,KAAKX,MAClBC,OAAQS,EAAMC,KAAKV,WAII,SAAAW,GACzB,MAAO,CACLb,cAAe,SAACC,EAAOC,GAAR,OAAmBW,EAASC,IAAyBb,EAAOC,QAMhEQ,CAA6CZ","file":"static/js/5.e77ad1e8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__2hBn0\",\"List\":\"Order_List__2Hjkz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Orders\":\"Orders_Orders__1JBCV\"};","import React from 'react';\nimport styles from './Order.module.css';\n\nconst order = (props) => {\n  let arr = []\n  for (let key in props.ing) {\n    if (props.ing[key] > 0) {\n      arr.push({ name: key, amount: props.ing[key] })\n    }\n  }\n\n  const finalOutput = arr.map(ar => {\n    return <span className={styles.List} key={ar.name}>{ar.name} ({ar.amount})</span>\n  })\n\n\n\n  return (\n    <div className={styles.Order}>\n      <p>Name: {props.name}</p>\n      <p>Ingredients: {finalOutput}</p>\n      <p>Price: <strong>{props.price.toFixed(2)}</strong></p>\n    </div>\n  )\n}\n\nexport default order;","import React, { Component } from 'react';\n// import axios from 'axios';\nimport Order from \"../../Components/Order/Order\";\nimport styles from './Orders.module.css'\nimport { connect } from 'react-redux'\nimport * as fetchActions from \"../../store/actions/index\";\nimport Spinner from '../../Components/UI/Spinner/Spinner';\n\nclass Orders extends Component {\n\n\n  componentDidMount() {\n    this.props.onFecthOrders(this.props.token, this.props.userId)\n    // axios.get('https://icecream-3aa92.firebaseio.com/orders.json')\n    //   .then(res => {\n    //     const receivedInfo = [];\n    //     for (let key in res.data) {\n    //       receivedInfo.push({ ...res.data[key], id: key })\n    //     }\n    //     this.setState({ orders: receivedInfo, loading: false })\n    //   }).catch(error => {\n    //     this.setState({ loading: false })\n    //   })\n  }\n\n\n  render() {\n    let orders = <Spinner />;\n    if (!this.props.loading) {\n      orders = (\n        <div className={styles.Orders}>\n          {this.props.orders.map(order => {\n            return <Order key={order.id} ing={order.ingredients}\n              name={order.orderInfo.name} price={+order.price} />\n          })\n          }\n        </div>)\n    }\n    return orders\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFecthOrders: (token, userId) => dispatch(fetchActions.fetchOrders(token, userId))\n  }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);"],"sourceRoot":""}